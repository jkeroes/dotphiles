#
# dotphiles : https://github.com/dotphiles/dotphiles
#
# Sets dotzsh options.
#
# Authors:
#   Ben O'Hara <bohara@gmail.com>
#

# debug: see with `dzinfo`
##zstyle ':dotzsh:load' timing 'yes'
##zstyle ':dotzsh:module:*' timing 'yes'

# Set the Zsh modules to load (man zshmodules).
zstyle ':dotzsh:load' zmodule 'stat'

# Set the Zsh functions to load (man zshcontrib).
zstyle ':dotzsh:load' zfunction 'zargs' 'zmv'

# Set the dotzsh modules to load (browse modules).
# The order matters.
zstyle ':dotzsh:load' dzmodule \
  'gnu-utility' \
  'environment' \
  'terminal' \
  'editor' \
  'history' \
  'utility' \
  'completion' \
  'theme' \
  'git' \
  'osx' \
  'perl' \
  'grc' \
  'ssh'

### Global settings
# Color output (auto set to 'no' on dumb terminals).
zstyle ':dotzsh:module:*' color 'yes'
# Setup aliases for modules (disable per module below).
zstyle ':dotzsh:module:*' aliases 'yes'
# Set case-sensitivity for completion, history lookup, etc.
zstyle ':dotzsh:module:*' case-sensitive 'no'

### Environment module
# Set which PAGER to use less or more
##zstyle ':dotzsh:module:environment' pager 'less'
# Enable mouse scrolling in less, add the following to *zshrc*
##zstyle ':dotzsh:module:environment:pager:less' mousescroll 'false'

### Terminal Module
# Auto set the tab and window titles.
zstyle ':dotzsh:module:terminal' auto-title 'yes'

### Editor module
# Set the key mapping style to 'emacs' or 'vi'.
zstyle ':dotzsh:module:editor' keymap 'emacs'
# Set EDITOR to 'emacs' or 'vi'.
zstyle ':dotzsh:module:editor' editor 'vi'
# Auto convert .... to ../..
#zstyle ':dotzsh:module:editor' dot-expansion 'yes'

### Utility Module
# Disable `diff` highlighting
##zstyle ':dotzsh:module:utility:diff' color 'no'
# Disable `wdiff` highlighting
##zstyle ':dotzsh:module:utility:wdiff' color 'no'
# Disable `make` highlighting
##zstyle ':dotzsh:module:utility:make' color 'no'

### Completion module
# Expand global aliases automatically
zstyle ':dotzsh:module:completion' expand-global-aliases 'yes'

### SSH module
zstyle ':dotzsh:module:ssh:agent' forwarding 'yes'
#zstyle ':dotzsh:module:ssh:aliases' hosts 'yes'
zstyle ':dotzsh:module:ssh:agent' identities 'id_dsa' 'github_rsa' 'jkeroes_dreamhost'

### GNUPG module
# Enable ssh-agent protocol emulation for gpg-agent
##zstyle ':dotzsh:module:gnupg' agent-ssh-support 'yes'

### OSX module
# Add aliases for Applications
##zstyle ':dotzsh:module:osx' launcher 'yes'
# Open/Resume temrinal in correct dir
##zstyle ':dotzsh:module:osx' terminal-resume 'yes'

### Git module
zstyle ':dotzsh:module:git' aliases 'yes'

### TMUX module
# Auto start a session when Zsh is launched.
# Setting it to 'local' only starts a session for local terminals.
# Setting it to 'remote' only starts a session for SSH connections.
##zstyle ':dotzsh:module:tmux' auto-start 'no'
#zstyle ':dotzsh:module:tmux:aliases' tmuxinator 'yes'

### Syntax Highlighting module
#zstyle ':dotzsh:module:syntax-highlighting' highlighters 'main' 'brackets' 'pattern' \
#  'cursor' 'root' \

### Color
export CLICOLOR=1 # for colorized ls output

# For base16-vim
export BASE16_SHELL="$HOME/.dotfiles/base16-shell/base16-default.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

### Theme module
# Set default theme to load.
# Setting it to 'random' loads a random theme.
# Auto set to 'off' on dumb terminals.
zstyle ':dotzsh:module:theme' theme 'dotphiles'
### Set custom theme based on hostname or domain
# zstyle ':dotzsh:module:theme:hostname:your-host-here' theme 'dotphiles' 'soldark' 'magenta'
# zstyle ':dotzsh:module:theme:hostname:your-other-host-here' theme 'dotphiles' 'soldark' 'violet'
# zstyle ':dotzsh:module:theme:domain:your-domain-here' theme 'dotphiles' 'soldark' 'orange'

### Load dotzsh
source "$DOTZSH/init.zsh"

### Customize to your needs...

unsetopt extended_glob # gets in the way of git
unsetopt nomatch       # ditto

# dev
DEV_ENV="/usr/bin/env DH_TEMPLATE_PREFIX=${HOME}/ndn PERL5LIB=${HOME}/ndn/perl"
alias domy="${DEV_ENV}"
alias mysc="/usr/bin/sudo ${DEV_ENV} ${HOME}/ndn/dh/bin/servicectl"
alias scdb="/usr/bin/sudo ${DEV_ENV} perl -d ${HOME}/ndn/dh/bin/servicectl"
alias myscdb=scdb

# alias dbc='PATH=/opt/ndn-perl/jkeroes/perl/bin:$PATH /opt/ndn-perl/jkeroes/perl/bin/perl -I/usr/local/ndn/perl ~jkeroes/ndn/dh/bin/dbc'

alias gitrbr='for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r'
alias gh='git hist'
alias gh='git hist --all'
alias r='git review && all-gerrit'
alias gs='git show'
alias gd='git diff'
alias gdc='git diff --cached'

alias gg='git grep -E'
ggt()  { gg -i $* -- '*.t' }
ggtp() { gg -i $* -- '*.tp' }
ggm()  { gg -i $* -- '*.pm' }
ggp()  { gg -i $* -- '*.pm' '*.t' '*.pl' 'bin/' }
ggs()  { gg -i "sub.*$*" -- '*.pm' '*.t' '*.pl' 'bin/' }
gcaa() { gca --amend }
syslocate() { locate $* | grep -vE '^/home|^/root' }

# work
if [ -d /ndn/etc ]; then
    # alias dbc='PATH=/opt/ndn-perl/jkeroes/perl/bin:$PATH /opt/ndn-perl/jkeroes/perl/bin/perl -I/usr/local/ndn/perl ~jkeroes/ndn/dh/bin/dbc'

    # dev
    DEV_ENV="/usr/bin/env DH_TEMPLATE_PREFIX=${HOME}/ndn PERL5LIB=${HOME}/ndn/perl"
    alias domy="${DEV_ENV}"
    alias mysc="/usr/bin/sudo ${DEV_ENV} ${HOME}/ndn/dh/bin/servicectl"
    alias scdb="/usr/bin/sudo ${DEV_ENV} perl -d ${HOME}/ndn/dh/bin/servicectl"
    alias myscdb=scdb

    alias envperl='/opt/ndn-perl/current/bin/perl'
    alias envperldoc='/opt/ndn-perl/current/bin/perldoc'
    source /ndn/etc/ndnperl.rc

    # Simple alias to upload content to DH pastebin
    function pastebin() {
        if [ -t 0 ]; then
            txt=`pbpaste`
        else
            txt=`cat`
        fi
        URL=`echo $txt | ssh fubar "/ndn/dh/bin/pastebin.pl $1 -"`
        URL=${URL#-> }
        echo $URL
        echo $URL | pbcopy
        open $URL
    }

    decrypt_user() {
        perl -MNdn::Dreamhost::MysqlUser -MNdn::Common::AuthPriv -E 'my $user = shift; my $MU = Ndn::Dreamhost::MysqlUser->Load({dh_id => "dh", user => $user}) or die "User $user not found\n"; say Ndn::Common::AuthPriv::decryptPassword($MU->password_ndn)' $1
    }

    cd ~/ndn
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
